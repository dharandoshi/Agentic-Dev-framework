{
  "version": "1.0.0",
  "last_updated": "2025-08-20",
  "description": "Standardized response templates for agent consistency",
  "templates": {
    "task_acceptance": {
      "format": "structured",
      "required_fields": ["task_id", "agent_name", "acceptance_status", "estimated_completion", "next_steps"],
      "template": {
        "task_id": "{task_id}",
        "agent_name": "{agent_name}",
        "acceptance_status": "accepted|rejected|needs_clarification",
        "estimated_completion": "{timeline}",
        "next_steps": [
          "Step 1: {action}",
          "Step 2: {action}",
          "Step 3: {action}"
        ],
        "blockers": "{blockers_if_any}",
        "dependencies": ["{dependency_list}"],
        "success_criteria": ["{criteria_list}"]
      }
    },
    "progress_update": {
      "format": "structured",
      "required_fields": ["task_id", "agent_name", "progress_percentage", "status", "completed_items", "next_items"],
      "template": {
        "task_id": "{task_id}",
        "agent_name": "{agent_name}",
        "progress_percentage": "{0-100}",
        "status": "in_progress|blocked|completed|failed",
        "completed_items": [
          "✅ {completed_item_1}",
          "✅ {completed_item_2}"
        ],
        "current_work": "{what_working_on_now}",
        "next_items": [
          "🔄 {next_item_1}",
          "🔄 {next_item_2}"
        ],
        "blockers": "{blockers_if_any}",
        "estimated_completion": "{updated_timeline}",
        "artifacts_created": ["{artifact_list}"]
      }
    },
    "task_completion": {
      "format": "structured",
      "required_fields": ["task_id", "agent_name", "completion_status", "deliverables", "next_actions"],
      "template": {
        "task_id": "{task_id}",
        "agent_name": "{agent_name}",
        "completion_status": "completed",
        "completion_timestamp": "{iso_timestamp}",
        "deliverables": [
          "📦 {deliverable_1}",
          "📦 {deliverable_2}"
        ],
        "artifacts_created": ["{artifact_list}"],
        "testing_completed": "{yes|no|not_applicable}",
        "handoff_ready": "{yes|no}",
        "next_agent": "{next_agent_if_handoff}",
        "next_actions": [
          "{action_1}",
          "{action_2}"
        ]
      }
    },
    "handoff_request": {
      "format": "structured",
      "required_fields": ["from_agent", "to_agent", "task_id", "handoff_context", "expectations"],
      "template": {
        "from_agent": "{from_agent}",
        "to_agent": "{to_agent}",
        "task_id": "{task_id}",
        "handoff_reason": "{reason_for_handoff}",
        "handoff_context": {
          "work_completed": ["{completed_work}"],
          "current_state": "{current_state}",
          "artifacts_provided": ["{artifacts}"],
          "known_issues": ["{issues_if_any}"]
        },
        "expectations": {
          "next_steps": ["{expected_steps}"],
          "deliverables": ["{expected_deliverables}"],
          "timeline": "{expected_completion}"
        },
        "support_available": "{support_offered}"
      }
    },
    "escalation": {
      "format": "structured",
      "required_fields": ["escalating_agent", "task_id", "issue_type", "severity", "description"],
      "template": {
        "escalating_agent": "{agent_name}",
        "escalation_timestamp": "{iso_timestamp}",
        "task_id": "{task_id}",
        "issue_type": "blocked|technical_issue|resource_constraint|scope_change|other",
        "severity": "critical|high|medium|low",
        "description": "{detailed_description}",
        "attempted_solutions": ["{solution_attempts}"],
        "impact": "{impact_on_timeline_or_quality}",
        "requested_action": "{what_help_needed}",
        "suggested_resolution": "{suggested_approach}"
      }
    },
    "coordination_request": {
      "format": "structured",
      "required_fields": ["requesting_agent", "target_agents", "coordination_type", "timeline"],
      "template": {
        "requesting_agent": "{agent_name}",
        "target_agents": ["{target_agent_list}"],
        "coordination_type": "sync_meeting|review|approval|collaboration|information_sharing",
        "purpose": "{coordination_purpose}",
        "timeline": "{when_needed}",
        "agenda": ["{agenda_items}"],
        "expected_outcome": "{expected_result}",
        "preparation_needed": ["{prep_items}"]
      }
    },
    "status_report": {
      "format": "structured",
      "required_fields": ["agent_name", "reporting_period", "tasks_summary", "overall_health"],
      "template": {
        "agent_name": "{agent_name}",
        "reporting_period": "{time_period}",
        "timestamp": "{iso_timestamp}",
        "overall_health": "green|yellow|red",
        "tasks_summary": {
          "total_tasks": "{number}",
          "completed": "{number}",
          "in_progress": "{number}",
          "blocked": "{number}"
        },
        "key_accomplishments": ["{accomplishment_list}"],
        "current_priorities": ["{priority_list}"],
        "upcoming_deadlines": ["{deadline_list}"],
        "blockers_or_risks": ["{risk_list}"],
        "support_needed": "{support_if_needed}"
      }
    }
  },
  "output_standards": {
    "general_guidelines": {
      "tone": "professional and collaborative",
      "structure": "clear and organized",
      "language": "concise but complete",
      "emojis": "use sparingly for clarity (✅, 🔄, ⚠️, 📦)"
    },
    "required_elements": {
      "all_responses_must_include": [
        "agent identification",
        "task reference",
        "clear action items",
        "timeline information"
      ]
    },
    "formatting": {
      "use_lists": "for action items and deliverables",
      "use_status_indicators": "✅ completed, 🔄 in progress, ⚠️ blocked, 📦 deliverable",
      "date_format": "ISO 8601 for timestamps",
      "progress_format": "percentage (0-100%)"
    }
  },
  "validation_rules": {
    "response_validation": {
      "min_length": 50,
      "max_length": 2000,
      "required_sections": ["context", "actions", "timeline"],
      "forbidden_phrases": ["I don't know", "maybe", "possibly"]
    },
    "agent_specific_rules": {
      "scrum-master": {
        "must_include": ["sprint context", "stakeholder impact", "risk assessment"],
        "output_style": "project management focused"
      },
      "tech-lead": {
        "must_include": ["technical approach", "team coordination", "quality standards"],
        "output_style": "technical leadership focused"
      },
      "senior-frontend-engineer": {
        "must_include": ["ui/ux considerations", "component structure", "testing approach"],
        "output_style": "frontend development focused"
      },
      "senior-backend-engineer": {
        "must_include": ["api design", "data model", "performance considerations"],
        "output_style": "backend development focused"
      },
      "qa-engineer": {
        "must_include": ["test strategy", "quality metrics", "risk areas"],
        "output_style": "quality assurance focused"
      }
    }
  }
}